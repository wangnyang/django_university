# Generated by Django 4.1.7 on 2023-05-03 15:44

from django.db import migrations, models
import django.db.models.deletion
import university_app.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Faculty',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=50, verbose_name='faculty')),
                ('description', models.TextField(blank=True, null=True, verbose_name='description')),
            ],
            options={
                'verbose_name': 'faculty',
                'verbose_name_plural': 'faculties',
                'db_table': 'faculty',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=50, verbose_name='group')),
                ('faculty', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='university_app.faculty', verbose_name='faculty')),
            ],
            options={
                'verbose_name': 'group',
                'verbose_name_plural': 'groups',
                'db_table': 'class',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('day', models.DateField(verbose_name='day')),
                ('precise_time', models.TimeField(verbose_name='precise time')),
            ],
            options={
                'verbose_name': 'lesson',
                'verbose_name_plural': 'lessons',
                'db_table': 'lesson',
                'ordering': ['day'],
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=50, verbose_name='title')),
              #  ('faculty', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='university_app.faculty', verbose_name='faculty')),
            ],
            options={
                'verbose_name': 'subject',
                'verbose_name_plural': 'subjects',
                'db_table': 'subject',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='SubjectToTeacher',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='university_app.subject')),
            ],
            options={
                'db_table': 'subject_to_teacher',
            },
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('full_name', models.CharField(max_length=50, verbose_name='full name')),
                ('faculty', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='university_app.faculty', verbose_name='faculty')),
                ('subjects', models.ManyToManyField(through='university_app.SubjectToTeacher', to='university_app.subject', verbose_name='subjects')),
            ],
            options={
                'verbose_name': 'teacher',
                'verbose_name_plural': 'teachers',
                'db_table': 'teacher',
                'ordering': ['full_name'],
            },
        ),
        migrations.AddField(
            model_name='subjecttoteacher',
            name='teacher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='university_app.teacher'),
        ),
        migrations.CreateModel(
            name='SubjectToGroup',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('group', models.ForeignKey(db_column='class_id', on_delete=django.db.models.deletion.CASCADE, to='university_app.group')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='university_app.subject')),
            ],
            options={
                'db_table': 'subject_to_class',
                'unique_together': {('subject', 'group')},
            },
        ),
        migrations.AddField(
            model_name='subject',
            name='groups',
            field=models.ManyToManyField(through='university_app.SubjectToGroup', to='university_app.group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='subject',
            name='teachers',
            field=models.ManyToManyField(through='university_app.SubjectToTeacher', to='university_app.teacher', verbose_name='teachers'),
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(blank=True, default=university_app.models.get_datetime, editable=False, verbose_name='created')),
                ('full_name', models.CharField(max_length=50, verbose_name='full name')),
                ('group', models.ForeignKey(blank=True, db_column='class_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='university_app.group', verbose_name='group')),
            ],
            options={
                'verbose_name': 'student',
                'verbose_name_plural': 'students',
                'db_table': 'student',
                'ordering': ['full_name'],
            },
        ),
        migrations.CreateModel(
            name='Mark',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(blank=True, default=university_app.models.get_datetime, editable=False, verbose_name='created')),
                ('modified', models.DateTimeField(blank=True, default=university_app.models.get_datetime, validators=[university_app.models.validate_time], verbose_name='modified')),
                ('mark', models.IntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], null=True, verbose_name='mark')),
                ('presence', models.CharField(blank=True, choices=[('', ''), ('Н', 'Н')], max_length=50, null=True, verbose_name='presence')),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='university_app.lesson', verbose_name='lesson')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='university_app.student', verbose_name='student')),
            ],
            options={
                'verbose_name': 'mark',
                'verbose_name_plural': 'marks',
                'db_table': 'mark',
                'ordering': ['lesson'],
            },
        ),
        migrations.CreateModel(
            name='LessonToGroup',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('group', models.ForeignKey(db_column='class_id', on_delete=django.db.models.deletion.CASCADE, to='university_app.group')),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='university_app.lesson')),
            ],
            options={
                'db_table': 'lesson_to_class',
            },
        ),
        migrations.AddField(
            model_name='lesson',
            name='groups',
            field=models.ManyToManyField(through='university_app.LessonToGroup', to='university_app.group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='lesson',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='university_app.subject', verbose_name='subject'),
        ),
        migrations.AddField(
            model_name='lesson',
            name='teacher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='university_app.teacher', verbose_name='teacher'),
        ),
        migrations.CreateModel(
            name='Hometask',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(blank=True, default=university_app.models.get_datetime, editable=False, verbose_name='created')),
                ('task', models.TextField(verbose_name='task')),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='university_app.lesson', verbose_name='lesson')),
            ],
            options={
                'verbose_name': 'hometask',
                'verbose_name_plural': 'hometasks',
                'db_table': 'hometask',
                'ordering': ['task'],
            },
        ),
        migrations.AddField(
            model_name='group',
            name='lessons',
            field=models.ManyToManyField(through='university_app.LessonToGroup', to='university_app.lesson', verbose_name='lessons'),
        ),
        migrations.AddField(
            model_name='group',
            name='subjects',
            field=models.ManyToManyField(through='university_app.SubjectToGroup', to='university_app.subject', verbose_name='subjects'),
        ),
        migrations.AlterUniqueTogether(
            name='subjecttoteacher',
            unique_together={('subject', 'teacher')},
        ),
    ]
